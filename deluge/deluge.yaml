apiVersion: v1
kind: Namespace
metadata:
  name: deluge

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: deluge-config-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.1.2
    path: "/share/k8s-volumes/deluge/deluge-config"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deluge-config-pvc
  namespace: deluge
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: deluge-data-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5000Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.1.2
    path: "/share/k8s-volumes/deluge/deluge-data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deluge-data-pvc
  namespace: deluge
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5000Gi

---
apiVersion: v1
kind: Service
metadata:
  name: deluge-tcp
  namespace: deluge
  annotations:
    metallb.universe.tf/allow-shared-ip: "deluge"
spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.1.158
  selector:
    app: deluge
  ports:
    - name: web
      protocol: TCP
      port: 8112
      targetPort: 8112
    - name: traffic
      protocol: TCP
      port: 6881
      targetPort: 6881
    - name: rpc
      protocol: TCP
      port: 58846
      targetPort: 58846

---
apiVersion: v1
kind: Service
metadata:
  name: deluge-udp
  namespace: deluge
  annotations:
    metallb.universe.tf/allow-shared-ip: "deluge"
spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.1.158
  selector:
    app: deluge
  ports:
    - name: traffic
      protocol: UDP
      port: 6881
      targetPort: 6881

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deluge
  namespace: deluge
  labels:
    app: deluge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deluge
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: deluge
    spec:
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: deluge-config-pvc
        - name: data
          persistentVolumeClaim:
            claimName: deluge-data-pvc
      containers:
        - name: deluge
          image: lscr.io/linuxserver/deluge:2.0.5
          ports:
            - containerPort: 58846
            - containerPort: 8112
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "1001"
            - name: GUID
              value: "1000"
            - name: TZ
              value: "Europe/Madrid"
            - name: DELUGE_LOGLEVEL
              value: "warning"
          readinessProbe:
            tcpSocket:
              port: 58846
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 58846
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: false
            - name: data
              mountPath: /downloads
              readOnly: false

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: deluge-ingress
  namespace: deluge
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: internal-nginx
  tls:
    - hosts:
        - deluge.nahue.com.ar
      secretName: deluge
  rules:
    - host: deluge.nahue.com.ar
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: deluge-tcp
                port:
                  number: 8112
