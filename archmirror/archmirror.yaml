apiVersion: v1
kind: Namespace
metadata:
  name: archmirror

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: archmirror-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.1.2
    path: "/share/Archmirror_data/Data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: archmirror-pvc
  namespace: archmirror
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: Service
metadata:
  name: http-server
  namespace: archmirror
spec:
  type: ClusterIP
  selector:
    app: http-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-server
  namespace: archmirror
  labels:
    app: http-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-server
  template:
    metadata:
      labels:
        app: http-server
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: archmirror-pvc
      containers:
        - name: http-server
          image: npastorale/archmirror-http-server:1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "Europe/Madrid"
          ports:
            - containerPort: 80
          livenessProbe:
            exec:
              command:
                - cat
                - /data/lastsync
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /lastsync
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: true

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rsync-client
  namespace: archmirror
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 4
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: archmirror-pvc
          containers:
            - name: rsync-client
              image: npastorale/archmirror-rsync-client:1.0.1
              imagePullPolicy: IfNotPresent
              env:
                - name: TZ
                  value: "Europe/Madrid"
              volumeMounts:
                - name: data
                  mountPath: /data
          restartPolicy: OnFailure

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-server-ingress
  namespace: archmirror
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - mirrors.nahue.com.ar
        - www.nahue.com.ar
        - nahue.com.ar
      secretName: mirrors
  rules:
    - host: mirrors.nahue.com.ar
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http-server
                port:
                  number: 80
    - host: www.nahue.com.ar
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http-server
                port:
                  number: 80
    - host: nahue.com.ar
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http-server
                port:
                  number: 80
